# Install `task` from https://taskfile.dev
# Run `task --list` to start.

version: "3"
set: [pipefail]

tasks:

  pre-commit:
    cmds:
      - task: build
      - task: lint
      - task: check-coverage
      - cmd: go mod tidy

  install:deps:
    desc: Install tool dependencies.
    cmds:
      - go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest
      - go install gotest.tools/gotestsum@latest

  lint:
    desc: Lint the code.
    cmds:
      - golangci-lint run ./...

  test:
    desc: Run all the tests.
    cmds:
      - cmd: mkdir -p bin
        silent: true
      # One day I will understand how to use -coverpkg=./... :-(
      - gotestsum -- -coverprofile=bin/coverage.out .
      - gotestsum -- ./examples/...

  test:args:
    desc: 'Run the tests specified with task test:args -- ARGS'
    cmds:
      - cmd: mkdir -p bin
        silent: true
      - gotestsum -- -coverprofile=bin/coverage.out {{.CLI_ARGS}}

  check-coverage:
    vars:
      COVER: '99.0%'
    cmds:
      - go clean -testcache
      - task: test
      - cmd: |
          have=$(go tool cover -func ./bin/coverage.out | grep ^total: | awk '{print $3}')
          if [ $have != {{.COVER}} ]; then
            echo "Coverage changed: have: $have; want: {{.COVER}}"
            exit 1
          else
            echo "Coverage: $have"
          fi
        silent: true

  browser:
    desc: 'Show code coverage in browser (usage: task test:<subtarget> browser)'
    cmds:
      - go tool cover -html=bin/coverage.out

  build:
    desc: Build all.
    cmds:
      - go build .
      - go build -o ./bin/flat   ./examples/flat
      - go build -o ./bin/hg     ./examples/hg
      - go build -o ./bin/nested ./examples/nested

  clean:
    desc: Delete build artifacts
    cmds:
      - rm -r -f bin

  ci:setup:
    desc: Useful only when running under CI.
    cmds:
      - task: install:deps
      # Running "go mod download" is optional, since "go build" would do it anyway.
      # We run it explicitly to make the output of "go build" more focused.
      - cmd: go mod download -x
